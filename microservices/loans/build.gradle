plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6' // A common version, might need adjustment
	id 'com.google.cloud.tools.jib' version '3.4.2' // From pom.xml
}

group = 'com.drarc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

jib {
	to {
		image = "drarc/${project.name}:s6" // Using project.name for artifactId
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1") // Placeholder, may need to find the exact version used by Spring Boot 3.3.2
}

bootBuildImage {
	imageName = "drarc/${project.name}:buildpack" // Using project.name for artifactId
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	// The pom had spring-cloud-config-server, but for a client, spring-cloud-starter-config is correct.
	// If this service IS also a config server (unlikely), this needs to be re-evaluated.

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${property('springCloudVersion')}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
} 